{"version":3,"sources":["components/Length.js","App.js","reportWebVitals.js","index.js"],"names":["Length","title","changeTime","type","time","formatTime","className","onClick","App","useState","displayTime","setDisplayTime","breakTime","setBreakTime","sessionTime","setSessionTime","timerOn","setTimerOn","onBreak","setOnBreak","amount","prev","minutes","Math","floor","seconds","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73bb4a7b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Length = ({title, changeTime, type, time, formatTime}) => {\r\n    return (\r\n        <div>\r\n            <h3>{title}</h3>\r\n            <div className=\"time-sets\">\r\n                <button className=\"btn-small deep-purple lighten-2\" onClick={() => changeTime(-60, type)}>\r\n                    <i className=\"material-icons\">arrow_downward</i>\r\n                </button>\r\n                <h3>{formatTime(time)}</h3>\r\n                <button className=\"btn-small deep-purple lighten-2\" onClick={() => changeTime(+60, type)}>\r\n                    <i className=\"material-icons\">arrow_upward</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Length\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport Length from './components/Length'\n\nfunction App() {\n\n  const [displayTime, setDisplayTime] = useState(25 * 60);\n  const [breakTime, setBreakTime] = useState(5 * 60);\n  const [sessionTime, setSessionTime] = useState(25 * 60);\n  const [timerOn, setTimerOn] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n\n\n\n  const changeTime = (amount, type) => {\n    if (type === \"break\"){\n      if(breakTime <= 60 && amount < 0){\n        return;\n      }\n      setBreakTime(prev => prev + amount);\n    } else {\n      if(sessionTime <= 60 && amount < 0){\n        return;\n      }\n      setSessionTime(prev => prev + amount);\n      if(!timerOn) {\n        setDisplayTime(sessionTime + amount)\n      }\n    }\n  }\n\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time/60);\n    let seconds = time % 60;\n\n    return (\n      (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds)\n    )\n  }\n\n  const controlTime = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = onBreak;\n    if(!timerOn) {\n    let interval = setInterval(() => {\n      date = new Date().getTime();\n      if(date > nextDate) {\n        setDisplayTime((prev) => {\n          if(prev <= 0 && !onBreakVariable){\n            onBreakVariable = true;\n            setOnBreak(true);\n            return breakTime\n          } else if(prev <= 0 && onBreakVariable){\n            onBreakVariable = true;\n            setOnBreak(true);\n            return sessionTime\n          }\n          return prev - 1;\n        });\n        nextDate += second;\n      }\n    }, 30);\n    localStorage.clear()\n    localStorage.setItem('interval-id', interval)\n  }\n\n  if(timerOn) {\n    clearInterval(localStorage.getItem('interval-id'));\n  }\n\n  setTimerOn(!timerOn)\n  }\n\n\n  const resetTime = () => {\n    setDisplayTime(25 * 60);\n    setBreakTime(5 * 60);\n    sessionTime(25 * 60);\n  }\n\n\n\n\n  return (\n    <div className=\"center-align\">\n      <h1>Pomodoro Clock</h1>\n      <div className=\"dual-container\">\n      <Length title={'break length'} changeTime={changeTime} type={\"break\"} time={breakTime} formatTime={formatTime}/>\n      <Length title={'session length'} changeTime={changeTime} type={\"session\"} time={sessionTime} formatTime={formatTime}/>\n      </div>\n      <h3>{onBreak ? 'Break' : 'Session'}</h3>\n        <h1>{formatTime(displayTime)}</h1> \n        <button className=\"btn-large deep-purple lighten-2\" onClick={controlTime}>\n          {timerOn ? (\n            <i className=\"material-icons\">pause_circle_filled</i>\n          ) : (\n            <i className=\"material-icons\">play_circle_filled</i>\n          )}\n        </button>\n        <button className=\"btn-large deep-purple lighten-2\" onClick={resetTime}>\n            <i className=\"material-icons\">autorenew</i>\n        </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}